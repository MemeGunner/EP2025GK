// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P4_Projekt_WPF_EP2B.Models;

#nullable disable

namespace P4_Projekt_WPF_EP2B.Migrations
{
    [DbContext(typeof(SmashTourneysDBContext))]
    partial class SmashTourneysDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.PlayerInTourneyModel", b =>
                {
                    b.Property<int>("pitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pitId"));

                    b.Property<bool>("pitIsPlaying")
                        .HasColumnType("bit");

                    b.Property<bool>("pitIsTO")
                        .HasColumnType("bit");

                    b.Property<int?>("pitSeeding")
                        .HasColumnType("int");

                    b.Property<int>("playerpId")
                        .HasColumnType("int");

                    b.Property<int>("tourneytId")
                        .HasColumnType("int");

                    b.HasKey("pitId");

                    b.HasIndex("playerpId");

                    b.HasIndex("tourneytId");

                    b.ToTable("PlayersInTourneys");
                });

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.PlayerModel", b =>
                {
                    b.Property<int>("pId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pId"));

                    b.Property<string>("pCountry")
                        .HasMaxLength(56)
                        .HasColumnType("nvarchar(56)");

                    b.Property<int?>("pDifficulty")
                        .HasColumnType("int");

                    b.Property<bool>("pIsAccountless")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("pJoinDate")
                        .HasColumnType("date");

                    b.Property<string>("pLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pMainName")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("pName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("pNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pPrefix")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("pPronouns")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("pId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.TourneyModel", b =>
                {
                    b.Property<int>("tId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tId"));

                    b.Property<string>("tAdress")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("tCity")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("tCountry")
                        .HasMaxLength(56)
                        .HasColumnType("nvarchar(56)");

                    b.Property<DateOnly>("tEndDate")
                        .HasColumnType("date");

                    b.Property<bool>("tIsOnline")
                        .HasColumnType("bit");

                    b.Property<string>("tName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("tNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tSiteLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("tStartDate")
                        .HasColumnType("date");

                    b.Property<string>("tWhichSite")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("tZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("tId");

                    b.ToTable("Tourneys");
                });

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.PlayerInTourneyModel", b =>
                {
                    b.HasOne("P4_Projekt_WPF_EP2B.Models.PlayerModel", "player")
                        .WithMany("playerInTourneys")
                        .HasForeignKey("playerpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P4_Projekt_WPF_EP2B.Models.TourneyModel", "tourney")
                        .WithMany("playerInTourneys")
                        .HasForeignKey("tourneytId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("player");

                    b.Navigation("tourney");
                });

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.PlayerModel", b =>
                {
                    b.Navigation("playerInTourneys");
                });

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.TourneyModel", b =>
                {
                    b.Navigation("playerInTourneys");
                });
#pragma warning restore 612, 618
        }
    }
}
