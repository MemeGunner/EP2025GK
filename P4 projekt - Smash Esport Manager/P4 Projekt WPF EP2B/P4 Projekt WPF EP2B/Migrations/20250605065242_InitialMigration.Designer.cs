// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P4_Projekt_WPF_EP2B.Models;

#nullable disable

namespace P4_Projekt_WPF_EP2B.Migrations
{
    [DbContext(typeof(SmashTourneysDBContext))]
    [Migration("20250605065242_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.PlayerInTourneyModel", b =>
                {
                    b.Property<int>("pitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pitId"));

                    b.Property<bool>("isPlaying")
                        .HasColumnType("bit");

                    b.Property<bool>("isTO")
                        .HasColumnType("bit");

                    b.Property<int>("playerId")
                        .HasColumnType("int");

                    b.Property<int>("tourneyId")
                        .HasColumnType("int");

                    b.HasKey("pitId");

                    b.HasIndex("playerId");

                    b.HasIndex("tourneyId");

                    b.ToTable("PlayersInTourneys");
                });

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.PlayerModel", b =>
                {
                    b.Property<int>("playerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("playerId"));

                    b.Property<bool>("isAccountless")
                        .HasColumnType("bit");

                    b.Property<string>("notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("playerCountry")
                        .IsRequired()
                        .HasMaxLength(56)
                        .HasColumnType("nvarchar(56)");

                    b.Property<int>("playerDifficulty")
                        .HasColumnType("int");

                    b.Property<DateOnly>("playerJoinDate")
                        .HasColumnType("date");

                    b.Property<string>("playerLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("playerName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("playerPrefix")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("playerPronouns")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("playerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.TourneyModel", b =>
                {
                    b.Property<int>("tourneyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tourneyId"));

                    b.Property<string>("adress")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasMaxLength(56)
                        .HasColumnType("nvarchar(56)");

                    b.Property<bool>("isOnline")
                        .HasColumnType("bit");

                    b.Property<string>("notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("siteLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("tourneyEndDate")
                        .HasColumnType("date");

                    b.Property<string>("tourneyName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateOnly>("tourneyStartDate")
                        .HasColumnType("date");

                    b.Property<string>("whichSite")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("zipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("tourneyId");

                    b.ToTable("Tourneys");
                });

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.PlayerInTourneyModel", b =>
                {
                    b.HasOne("P4_Projekt_WPF_EP2B.Models.PlayerModel", "player")
                        .WithMany("playerInTourneys")
                        .HasForeignKey("playerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P4_Projekt_WPF_EP2B.Models.TourneyModel", "tourney")
                        .WithMany("playerInTourneys")
                        .HasForeignKey("tourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("player");

                    b.Navigation("tourney");
                });

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.PlayerModel", b =>
                {
                    b.Navigation("playerInTourneys");
                });

            modelBuilder.Entity("P4_Projekt_WPF_EP2B.Models.TourneyModel", b =>
                {
                    b.Navigation("playerInTourneys");
                });
#pragma warning restore 612, 618
        }
    }
}
